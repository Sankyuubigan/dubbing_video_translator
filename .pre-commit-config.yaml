repos:
-   repo: local
    hooks:
    -   id: requirements # Переименовал для ясности, что используется pipreqs
        name: Generate requirements.txt using pipreqs
        entry: |
            bash -c '
            set -ex # Выход при ошибке и печать команд

            echo "--- Debugging requirements.txt hook (pipreqs) ---"
            echo "Current working directory:"
            pwd

            # Путь к python.exe в виртуальном окружении
            TARGET_PYTHON="./.venv/Scripts/python.exe"
            # Путь к pipreqs в том же окружении
            TARGET_PIPQS="./.venv/Scripts/pipreqs.exe" # Или просто pipreqs, если PATH настроен

            echo "Using Python: ${TARGET_PYTHON}"
            echo "Using pipreqs: ${TARGET_PIPQS}"

            echo "Checking if pipreqs is installed..."
            if ! "${TARGET_PYTHON}" -m pip show pipreqs > /dev/null 2>&1; then
                echo "Error: pipreqs not found in the virtual environment."
                echo "Please install it: ${TARGET_PYTHON} -m pip install pipreqs"
                exit 1
            fi
            echo "pipreqs found."

            echo "Running pipreqs..."
            # Запускаем pipreqs из виртуального окружения
            # --force: перезаписать requirements.txt если он существует
            # --encoding utf-8: на всякий случай для совместимости
            # .: сканировать текущую директорию
            # Возможно, понадобится добавить --ignore .venv, если он будет сканировать и его
            "${TARGET_PIPQS}" . --force --encoding=utf-8 --ignore .venv
            
            # Проверяем, создан ли файл
            if [ -f requirements.txt ]; then
                echo "requirements.txt generated by pipreqs."
                # Добавляем файл в индекс Git
                git add requirements.txt
                echo "requirements.txt added to git."
            else
                echo "Error: requirements.txt was not generated by pipreqs."
                exit 1
            fi
            echo "---------------------------------------"
            '
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

# Добавь другие хуки сюда, если нужно (например, для форматирования кода)
# -   repo: https://github.com/psf/black
#     rev: 24.4.2
#     hooks:
#     -   id: black
# -   repo: https://github.com/pycqa/flake8
#     rev: 7.1.0
#     hooks:
#     -   id: flake8