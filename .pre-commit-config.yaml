repos:
-   repo: local
    hooks:
    -   id: requirements 
        name: Generate requirements.txt using pipreqs
        entry: |
            bash -c '
            # УБИРАЕМ set -e для отладки кода возврата pipreqs.exe
            echo "--- Running pipreqs hook (set -e disabled for pipreqs call) ---";
            PIPQS_EXE="./.venv/Scripts/pipreqs.exe";

            echo "Checking for pipreqs.exe at $PIPQS_EXE...";
            if [ ! -f "$PIPQS_EXE" ]; then
                echo "ERROR: pipreqs.exe not found at $PIPQS_EXE. Cannot proceed.";
                exit 1; # Выходим, если самого файла нет
            fi;

            echo "Running pipreqs.exe: $PIPQS_EXE (return code will be ignored)";
            "$PIPQS_EXE" . --force --encoding=utf-8 --ignore .venv;
            # Мы не проверяем код возврата pipreqs.exe здесь.
            
            echo "Checking if requirements.txt was generated/updated...";
            if [ -f "requirements.txt" ]; then
                echo "requirements.txt found.";
                # Проверяем, есть ли изменения в файле, чтобы не делать пустых коммитов git add
                # Это может быть сложно сделать надежно в bash, поэтому пока просто добавляем.
                # Если git add requirements.txt ничего не изменит, то и коммит не будет затронут этим файлом.
                git add requirements.txt;
                echo "requirements.txt added to git.";
            else
                echo "ERROR: requirements.txt was not generated by pipreqs. This is a failure.";
                exit 1; # Если файл не создан, это точно ошибка
            fi;
            echo "--- pipreqs hook finished ---";
            '
        language: system
        pass_filenames: false
        always_run: true 
        stages: [pre-commit]

# -   repo: https://github.com/psf/black
#     rev: 24.4.2
#     hooks:
#     -   id: black
# -   repo: https://github.com/pycqa/flake8
#     rev: 7.1.0
#     hooks:
#     -   id: flake8